{"ast":null,"code":"var _jsxFileName = \"C:\\\\coding\\\\react-teamproject-eattogether\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Register.css';\nimport axios from 'axios';\nimport FloatingLabelInput from '../components/FloatingLabelInput';\nimport { JSON_SERVER } from '../JsonConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [name, setName] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  async function handleRegister() {\n    // 이름: 2~10자리, 한글 또는 영어만 가능\n    const nameRegex = /^[가-힣a-zA-Z]{2,10}$/;\n\n    // 닉네임: 2~12자리, 여백을 제외한 모든 문자 가능\n    const nicknameRegex = /^.{2,12}$/;\n\n    // 아이디: 영문, 숫자 조합 6~12자리\n    const usernameRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,12}$/;\n\n    // 비밀번호: 영문, 숫자 조합 8~16자리\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,16}$/;\n\n    //유효성 검사 시작\n    if (!nameRegex.test(name)) {\n      alert('이름은 2~10자리로 한글 또는 영어만 입력해 주세요.\\n한글 자음, 모음 형태(ㅋㅋ, ㅜㅜ)는 불가');\n      return;\n    }\n    if (!nicknameRegex.test(nickname)) {\n      alert('닉네임은 2~12자리로 입력해 주세요');\n      return;\n    }\n    if (!usernameRegex.test(username)) {\n      alert('아이디는 영문과 숫자 조합으로 6~12자리로 입력해 주세요');\n      return;\n    }\n    if (!passwordRegex.test(password)) {\n      alert('비밀번호는 영문과 숫자 조합으로 8~16자리로 입력해 주세요');\n      return;\n    }\n    if (password !== confirmPassword) {\n      alert('비밀번호와 비밀번호 확인이 일치하지 않습니다');\n      return;\n    }\n    // 아이디 중복 검사\n\n    try {\n      const usersResponse = await axios.get(JSON_SERVER + '/users');\n      console.log(usersResponse.data);\n      const users = usersResponse.data;\n      const existingUser = users.find(user => user.username === username);\n      if (existingUser) {\n        alert('아이디 중복');\n        return; // 중복된 아이디가 있으면 회원가입 로직을 중단한다.\n      }\n      //중복된 아이디가 없을 때의 회원가입 로직\n      const user = {\n        name,\n        nickname,\n        username,\n        password,\n        admin: false\n      };\n      await axios.post(JSON_SERVER + '/users', user);\n      alert('회원가입 성공');\n      navigate('/Login');\n    } catch (error) {\n      console.error('Error during registration:', error);\n      alert('회원가입 실패');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"textRed\",\n        children: \"Eat Together \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), \"\\uC5D0 \\uC624\\uC2E0 \\uAC83\\uC744 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FloatingLabelInput, {\n      className: \"register-input-container\",\n      type: \"text\",\n      label: \"\\uC774\\uB984 (2~10\\uC790\\uB9AC, \\uD55C\\uAE00 \\uB610\\uB294 \\uC601\\uC5B4\\uB9CC)\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FloatingLabelInput, {\n      className: \"register-input-container\",\n      type: \"text\",\n      label: \"\\uB2C9\\uB124\\uC784 (2~12\\uC790\\uB9AC)\",\n      value: nickname,\n      onChange: e => setNickname(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FloatingLabelInput, {\n      className: \"register-input-container\",\n      type: \"text\",\n      label: \"\\uC544\\uC774\\uB514(\\uC601\\uBB38, \\uC22B\\uC790 \\uC870\\uD569 6~12\\uC790\\uB9AC)\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FloatingLabelInput, {\n      className: \"register-input-container\",\n      type: \"password\",\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638(\\uC601\\uBB38, \\uC22B\\uC790 \\uC870\\uD569 8~16\\uC790\\uB9AC)\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FloatingLabelInput, {\n      className: \"register-input-container\",\n      type: \"password\",\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"register-btn\",\n      onClick: handleRegister,\n      children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cancel-btn\",\n      onClick: () => navigate('/Login'),\n      children: \"\\uCDE8\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"PS8hZFEw01n/+pF5sNWGsgnzaHY=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","axios","FloatingLabelInput","JSON_SERVER","jsxDEV","_jsxDEV","Register","_s","name","setName","nickname","setNickname","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","navigate","handleRegister","nameRegex","nicknameRegex","usernameRegex","passwordRegex","test","alert","usersResponse","get","console","log","data","users","existingUser","find","user","admin","post","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","label","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/coding/react-teamproject-eattogether/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Register.css';\r\nimport axios from 'axios';\r\nimport FloatingLabelInput from '../components/FloatingLabelInput';\r\nimport { JSON_SERVER } from '../JsonConfig';\r\n\r\nfunction Register() {\r\n  const [name, setName] = useState('');\r\n  const [nickname, setNickname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  async function handleRegister() {\r\n    // 이름: 2~10자리, 한글 또는 영어만 가능\r\n    const nameRegex = /^[가-힣a-zA-Z]{2,10}$/;\r\n\r\n    // 닉네임: 2~12자리, 여백을 제외한 모든 문자 가능\r\n    const nicknameRegex = /^.{2,12}$/;\r\n\r\n    // 아이디: 영문, 숫자 조합 6~12자리\r\n    const usernameRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,12}$/;\r\n\r\n    // 비밀번호: 영문, 숫자 조합 8~16자리\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,16}$/;\r\n\r\n    //유효성 검사 시작\r\n    if (!nameRegex.test(name)) {\r\n      alert(\r\n        '이름은 2~10자리로 한글 또는 영어만 입력해 주세요.\\n한글 자음, 모음 형태(ㅋㅋ, ㅜㅜ)는 불가'\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!nicknameRegex.test(nickname)) {\r\n      alert('닉네임은 2~12자리로 입력해 주세요');\r\n      return;\r\n    }\r\n\r\n    if (!usernameRegex.test(username)) {\r\n      alert('아이디는 영문과 숫자 조합으로 6~12자리로 입력해 주세요');\r\n      return;\r\n    }\r\n\r\n    if (!passwordRegex.test(password)) {\r\n      alert('비밀번호는 영문과 숫자 조합으로 8~16자리로 입력해 주세요');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('비밀번호와 비밀번호 확인이 일치하지 않습니다');\r\n      return;\r\n    }\r\n    // 아이디 중복 검사\r\n\r\n    try {\r\n      const usersResponse = await axios.get(JSON_SERVER + '/users');\r\n      console.log(usersResponse.data);\r\n      const users = usersResponse.data;\r\n      const existingUser = users.find((user) => user.username === username);\r\n\r\n      if (existingUser) {\r\n        alert('아이디 중복');\r\n        return; // 중복된 아이디가 있으면 회원가입 로직을 중단한다.\r\n      }\r\n      //중복된 아이디가 없을 때의 회원가입 로직\r\n      const user = {\r\n        name,\r\n        nickname,\r\n        username,\r\n        password,\r\n        admin: false,\r\n      };\r\n\r\n      await axios.post(JSON_SERVER + '/users', user);\r\n      alert('회원가입 성공');\r\n      navigate('/Login');\r\n    } catch (error) {\r\n      console.error('Error during registration:', error);\r\n      alert('회원가입 실패');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h1><span className=\"textRed\">Eat Together </span>에 오신 것을 환영합니다</h1>\r\n      <h2>회원가입</h2>\r\n      <FloatingLabelInput\r\n        className=\"register-input-container\"\r\n        type=\"text\"\r\n        label=\"이름 (2~10자리, 한글 또는 영어만)\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <FloatingLabelInput\r\n        className=\"register-input-container\"\r\n        type=\"text\"\r\n        label=\"닉네임 (2~12자리)\"\r\n        value={nickname}\r\n        onChange={(e) => setNickname(e.target.value)}\r\n      />\r\n      <FloatingLabelInput\r\n        className=\"register-input-container\"\r\n        type=\"text\"\r\n        label=\"아이디(영문, 숫자 조합 6~12자리)\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <FloatingLabelInput\r\n        className=\"register-input-container\"\r\n        type=\"password\"\r\n        label=\"비밀번호(영문, 숫자 조합 8~16자리)\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <FloatingLabelInput\r\n        className=\"register-input-container\"\r\n        type=\"password\"\r\n        label=\"비밀번호 확인\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n      />\r\n      <button className=\"register-btn\" onClick={handleRegister}>\r\n        가입하기\r\n      </button>\r\n      <button className=\"cancel-btn\" onClick={() => navigate('/Login')}>\r\n        취소\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}